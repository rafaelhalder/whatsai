// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(uuid())
  name            String
  email           String     @unique
  passwordHash    String
  createdAt       DateTime   @default(now())
  instances       Instance[]
  settings        Setting?
  Token           Token[]
  accessExpiresAt DateTime?

  //    accessExpiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)
  @@map("users")
}

model Instance {
  id             String         @id @default(uuid())
  user           User           @relation(fields: [userId], references: [id])
  userId         String         @map("user_id")
  instanceName   String
  whatsappNumber String
  status         String // e.g., "connected", "disconnected"
  qrCode         String?
  createdAt      DateTime       @default(now())
  conversations  Conversation[]

  @@map("instances")
}

model Conversation {
  id            String    @id @default(uuid())
  instance      Instance  @relation(fields: [instanceId], references: [id])
  instanceId    String    @map("instance_id")
  contactNumber String
  contactName   String?
  lastMessageAt DateTime?
  status        String    @default("open") // open, closed, pending
  createdAt     DateTime  @default(now())
  messages      Message[]

  @@map("conversations")
}

model Message {
  id             String       @id @default(uuid())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String       @map("conversation_id")
  senderType     String // "user", "contact", "ai"
  messageText    String
  messageType    String       @default("text") // "text", "image", etc.
  timestamp      DateTime     @default(now())

  @@map("messages")
}

model Setting {
  id            String  @id @default(uuid())
  user          User    @relation(fields: [userId], references: [id])
  userId        String  @unique @map("user_id")
  useAi         Boolean @default(false)
  autoReplyText String?
  workingHours  Json? // e.g. { start: "08:00", end: "18:00" }

  @@map("settings")
}

model Token {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")
  token     String
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@map("tokens")
}
